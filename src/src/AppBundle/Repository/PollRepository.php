<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Poll;
use AppBundle\Entity\Participant;
/**
 * PollRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PollRepository extends \Doctrine\ORM\EntityRepository
{
    public function getVotersCount(Poll $poll)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();
        
        $qb->select($qb->expr()->count('p.id'))
           ->from('AppBundle:participant', 'p')
           ->where('p.poll = :poll')
           ->andWhere( $qb->expr()->isNotNull('p.chosenOption') )
           ->setParameter('poll', $poll);
           
        $query = $qb->getQuery();
                    
        try {
            return $query->getSingleScalarResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return -1;
        }
    }
	
    public function getMajorityOption(Poll $poll)
    {
        $em = $this->getEntityManager();
		
		$query = $em->createQuery(
		'SELECT p.chosenExpert.Option, COUNT(p.chosenExpert) AS HIDDEN cnt '.
		'FROM AppBundle:Participant p '.
		'WHERE p.poll = :poll '.
		'AND p.chosenExpert IS NOT NULL '.
		'GROUP BY p.chosenExpert '.
		'ORDER BY cnt ASC'
		);
		$query->setParameter('poll', $poll);
                    
        try {
            return $query->getSingleResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    public function getSelectedExpert(Poll $poll)
    {
        $em = $this->getEntityManager();
		
		$query = $em->createQuery(
		'SELECT p, COUNT(p.chosenExpert) AS HIDDEN cnt '.
		'FROM AppBundle:Participant p '.
		'JOIN p.chosenExpert e '.
		'WHERE p.poll = :poll '.
		'AND p.chosenExpert IS NOT NULL '.
		'AND e.chosenOption IS NOT NULL '.
		'GROUP BY p.chosenExpert '.
		'ORDER BY cnt DESC'
		);
		$query->setParameter('poll', $poll);
                    
        try {
            return $query->getSingleResult() ? $query->getSingleResult()->getChosenExpert() : null;
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

}
